import json

COURSE_ANSWERS = {
    "GST112" : {
        "q1": "Portuguese",
        "q2": "English",
        "q3": "South",
        "q4": "50",
        "q5": "Yoruba",
        "q6": "Divinities",
        "q7": "Society and culture",
        "q8": "Absolution",
        "q9": "Ghana",
        "q10": "Obatala",
        "q11": "Determinism",
        "q12": "1939",
        "q13": "Fulani",
        "q14": "Hiroshima",
        "q15": "Patricia Etteh",
        "q16": "Convivial",
        "q17": "Anthony Enahoro",
        "q18": "201",
        "q19": "Bill Clinton",
        "q20": "Obafemi Awolowo",
        "q21": "153 million",
        "q22": "Attitude and Behavior",
        "q23": "1914",
        "q24": "Discipline",
        "q25": "Ethics and Discipline",
        "q26": "Ethics",
        "q27": "Ethics",
        "q28": "Ethics",
        "q29": "Norms",
        "q30": "The Bill of Right",
        "q31": "Value",
        "q32": "Folkways",
        "q33": "Values",
        "q34": "Culturally Specific",
        "q35": "Gesture",
        "q36": "Patriotism",
        "q37": "Values",
        "q38": "Morality",
        "q39": "Morality",
        "q40": "Re-orientation",
        "q41": "Crime",
        "q42": "Cultism",
        "q43": "Materialism",
        "q44": "Moral Problems",
        "q45": "Nation",
        "q46": "52",
        "q47": "5",
        "q48": "Divinities",
        "q49": "Reincarnation",
        "q50": "Magic"
    },
    "GET102" : {
        "q1": "A group of interconnected parts working together towards a common goal",
        "q2": "Other system components",
        "q3": "They are inextricably inter-mingled",
        "q4": "Interrelationships and feedback",
        "q5": "Interconnected components working together",
        "q6": "Reinforce or balance system behaviour",
        "q7": "Amplify change in the system",
        "q8": "Self-correct or maintain stability",
        "q9": "Show cause-effect relationships",
        "q10": "Accumulations and rates of change",
        "q11": "Water level in the tank",
        "q12": "Rates of change of stocks",
        "q13": "Cause instability or oscillation",
        "q14": "Adjust chemical dosing based on water quality",
        "q15": "Holistic problem-solving",
        "q16": "Short-sighted decisions",
        "q17": "A small input that causes big changes",
        "q18": "Linear cause and effect",
        "q19": "System grows, then slows or stops due to constraints",
        "q20": "Shared resources being depleted",
        "q21": "Using quick fixes rather than long-term solutions",
        "q22": "Temporary improvement followed by worse problems",
        "q23": "Focuses on system structure or goals",
        "q24": "All disciplines dealing with complexity",
        "q25": "Improve flow and reduce waste",
        "q26": "Informed and long-term",
        "q27": "Ignoring upstream water pollution while treating only at the plant",
        "q28": "See environmental and economic trade-offs",
        "q29": "The system's behaviour being more than the sum of its parts",
        "q30": "Deeply held beliefs that influence decisions",
        "q31": "Critical for understanding system behaviour",
        "q32": "Multiple interrelated parts and feedbacks",
        "q33": "Patterns, structures, and root causes",
        "q34": "True",
        "q35": "False",
        "q36": "True",
        "q37": "False",
        "q38": "True",
        "q39": "False",
        "q40": "True",
        "q41": "False",
        "q42": "False",
        "q43": "True",
        "q44": "False",
        "q45": "False",
        "q46": "True",
        "q47": "True",
        "q48": "True",
        "q49": "True",
        "q50": "True",
        "q51": "False",
        "q52": "True",
        "q53": "False",
        "q54": "False",
        "q55": "True",
        "q56": "False",
        "q57": "True",
        "q58": "True",
        "q59": "False",
        "q60": "True",
        "q61": "False",
        "q62": "False",
        "q63": "True",
        "q64": "True",
        "q65": "False",
        "q66": "False",
        "q67": "True",
        "q68": "True",
        "q69": "False",
        "q70": "False",
        "q71": "True",
        "q72": "False",
        "q73": "True",
        "q74": "90°",
        "q75": "India",
        "q76": "Compass",
        "q77": "Perspective projection",
        "q78": "Between observer and vertical plane",
        "q79": "Cutting plane line",
        "q80": "5 mm",
        "q81": "Thick continuous line",
        "q82": "A0",
        "q83": "Horizontally and vertically",
        "q84": "1:1",
        "q85": "120°",
        "q86": "Dimensions and projection lines",
        "q87": "Auxiliary views",
        "q88": "Orthographic",
        "q89": "In the third quadrant",
        "q90": "T-square",
        "q91": "First angle",
        "q92": "Vertical plane",
        "q93": "Dashed line",
        "q94": "Ellipse template",
        "q95": "Long dash-short dash",
        "q96": "Three",
        "q97": "3 mm",
        "q98": "Equally foreshortening all axes",
        "q99": "Indicate the size and position",
        "q100": "Horizontal plane",
        "q101": "2:3",
        "q102": "Profile plane",
        "q103": "Isometric drawing",
        "q104": "Auxiliary view",
        "q105": "Protractor",
        "q106": "Vanishing point",
        "q107": "Half section",
        "q108": "Point",
        "q109": "A rounded interior corner",
        "q110": "Perpendicular to the viewing plane",
        "q111": "Material cut by the plane",
        "q112": "Show all parts separately in assembly",
        "q113": "First angle",
        "q114": "Connect a note to a feature",
        "q115": "Reducing scale",
        "q116": "Radius",
        "q117": "Compass",
        "q118": "Front view",
        "q119": "Orthographic",
        "q120": "Arrowheads",
        "q121": "Alternate positions of moving parts",
        "q122": "Organize and control visibility of elements",
        "q123": "True",
        "q124": "True",
        "q125": "False",
        "q126": "True",
        "q127": "False",
        "q128": "True",
        "q129": "True",
        "q130": "False",
        "q131": "True",
        "q132": "True",
        "q133": "False",
        "q134": "True",
        "q135": "True",
        "q136": "True",
        "q137": "True",
        "q138": "False",
        "q139": "False",
        "q140": "True",
        "q141": "False",
        "q142": "True",
        "q143": "True",
        "q144": "False",
        "q145": "True",
        "q146": "False",
        "q147": "True",
        "q148": "True",
        "q149": "False",
        "q150": "True",
        "q151": "True",
        "q152": "False"
    },
    "CHM102": {
        "q1": "one s-electron",
        "q2": "decreases",
        "q3": "Fertilizers and biochemical substrates",
        "q4": "Ba",
        "q5": "the first member",
        "q6": "+1",
        "q7": "two s-electron and two p-electron",
        "q8": "Sc3+",
        "q9": "if the nucleus is stable, it will disintegrate",
        "q10": "+2 to +6",
        "q11": "0.0625g",
        "q12": "3.87BM",
        "q13": "14N-7",
        "q14": "small atomic radii",
        "q15": "the oxidation state of the transition metal doesn't determine the colour",
        "q16": "Friedrich Wöhler",
        "q17": "crystalline form",
        "q18": "the properties of organic compounds",
        "q19": "studying the composition of stars",
        "q20": "Carbon, hydrogen, oxygen",
        "q21": "Alkanes",
        "q22": "Imbalance in electron density",
        "q23": "RCOOH",
        "q24": "RCHO",
        "q25": "Butylamine",
        "q26": "C=O and -O-",
        "q27": "CH3C(CH3)OHCH2CH3",
        "q28": "but-2-ene",
        "q29": "ethanol and ethanoic acid",
        "q30": "Fractional distillation"
    }
}
def normalize(text):
    return " ".join(text.strip().lower().split())
def lambda_handler(event, context):
    try:
        print("EVENT:", event)
        body = json.loads(event.get("body", "{}"))

        course_id = body.get("courseId")
        question_id = body.get("question_id")
        user_answer = body.get("answer", "")

        if not course_id or course_id not in COURSE_ANSWERS:
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "Invalid or missing courseId"})
            }

        correct_answer = COURSE_ANSWERS[course_id].get(question_id, "")
        is_correct = normalize(user_answer) == normalize(correct_answer)

        return {
            "statusCode": 200,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Headers": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token",
                "Access-Control-Allow-Methods": "OPTIONS,GET,POST",
            },
            "body": json.dumps({"correct": is_correct})
        }

    except Exception as e:
        print("ERROR:", str(e))
        return {
            "statusCode": 400,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*"
            },
            "body": json.dumps({"error": str(e)})
        }