import json

ANSWER_BANK = {
"GST112" : {
    "q1": "Portuguese",
    "q2": "English",
    "q3": "South",
    "q4": "50",
    "q5": "Yoruba",
    "q6": "Divinities",
    "q7": "Society and culture",
    "q8": "Absolution",
    "q9": "Ghana",
    "q10": "Obatala",
    "q11": "Determinism",
    "q12": "1939",
    "q13": "Fulani",
    "q14": "Hiroshima",
    "q15": "Patricia Etteh",
    "q16": "Convivial",
    "q17": "Anthony Enahoro",
    "q18": "201",
    "q19": "Bill Clinton",
    "q20": "Obafemi Awolowo",
    "q21": "153 million",
    "q22": "Attitude and Behavior",
    "q23": "1914",
    "q24": "Discipline",
    "q25": "Ethics and Discipline",
    "q26": "Ethics",
    "q27": "Ethics",
    "q28": "Ethics",
    "q29": "Norms",
    "q30": "The Bill of Right",
    "q31": "Value",
    "q32": "Folkways",
    "q33": "Values",
    "q34": "Culturally Specific",
    "q35": "Gesture",
    "q36": "Patriotism",
    "q37": "Values",
    "q38": "Morality",
    "q39": "Morality",
    "q40": "Re-orientation",
    "q41": "Crime",
    "q42": "Cultism",
    "q43": "Materialism",
    "q44": "Moral Problems",
    "q45": "Nation",
    "q46": "52",
    "q47": "5",
    "q48": "Divinities",
    "q49": "Reincarnation",
    "q50": "Magic"
},
   "GET102" : {
        "q1": "A group of interconnected parts working together towards a common goal",
        "q2": "Other system components",
        "q3": "They are inextricably inter-mingled",
        "q4": "Interrelationships and feedback",
        "q5": "Interconnected components working together",
        "q6": "Reinforce or balance system behaviour",
        "q7": "Amplify change in the system",
        "q8": "Self-correct or maintain stability",
        "q9": "Show cause-effect relationships",
        "q10": "Accumulations and rates of change",
        "q11": "Water level in the tank",
        "q12": "Rates of change of stocks",
        "q13": "Cause instability or oscillation",
        "q14": "Adjust chemical dosing based on water quality",
        "q15": "Holistic problem-solving",
        "q16": "Short-sighted decisions",
        "q17": "A small input that causes big changes",
        "q18": "Linear cause and effect",
        "q19": "System grows, then slows or stops due to constraints",
        "q20": "Shared resources being depleted",
        "q21": "Using quick fixes rather than long-term solutions",
        "q22": "Temporary improvement followed by worse problems",
        "q23": "Focuses on system structure or goals",
        "q24": "All disciplines dealing with complexity",
        "q25": "Improve flow and reduce waste",
        "q26": "Informed and long-term",
        "q27": "Ignoring upstream water pollution while treating only at the plant",
        "q28": "See environmental and economic trade-offs",
        "q29": "The system's behaviour being more than the sum of its parts",
        "q30": "Deeply held beliefs that influence decisions",
        "q31": "Critical for understanding system behaviour",
        "q32": "Multiple interrelated parts and feedbacks",
        "q33": "Patterns, structures, and root causes",
        "q34": "True",
        "q35": "False",
        "q36": "True",
        "q37": "False",
        "q38": "True",
        "q39": "False",
        "q40": "True",
        "q41": "False",
        "q42": "False",
        "q43": "True",
        "q44": "False",
        "q45": "False",
        "q46": "True",
        "q47": "True",
        "q48": "True",
        "q49": "True",
        "q50": "True",
        "q51": "False",
        "q52": "True",
        "q53": "False",
        "q54": "False",
        "q55": "True",
        "q56": "False",
        "q57": "True",
        "q58": "True",
        "q59": "False",
        "q60": "True",
        "q61": "False",
        "q62": "False",
        "q63": "True",
        "q64": "True",
        "q65": "False",
        "q66": "False",
        "q67": "True",
        "q68": "True",
        "q69": "False",
        "q70": "False",
        "q71": "True",
        "q72": "False",
        "q73": "True",
        "q74": "90°",
        "q75": "India",
        "q76": "Compass",
        "q77": "Perspective projection",
        "q78": "Between observer and vertical plane",
        "q79": "Cutting plane line",
        "q80": "5 mm",
        "q81": "Thick continuous line",
        "q82": "A0",
        "q83": "Horizontally and vertically",
        "q84": "1:1",
        "q85": "120°",
        "q86": "Dimensions and projection lines",
        "q87": "Auxiliary views",
        "q88": "Orthographic",
        "q89": "In the third quadrant",
        "q90": "T-square",
        "q91": "First angle",
        "q92": "Vertical plane",
        "q93": "Dashed line",
        "q94": "Ellipse template",
        "q95": "Long dash-short dash",
        "q96": "Three",
        "q97": "3 mm",
        "q98": "Equally foreshortening all axes",
        "q99": "Indicate the size and position",
        "q100": "Horizontal plane",
        "q101": "2:3",
        "q102": "Profile plane",
        "q103": "Isometric drawing",
        "q104": "Auxiliary view",
        "q105": "Protractor",
        "q106": "Vanishing point",
        "q107": "Half section",
        "q108": "Point",
        "q109": "A rounded interior corner",
        "q110": "Perpendicular to the viewing plane",
        "q111": "Material cut by the plane",
        "q112": "Show all parts separately in assembly",
        "q113": "First angle",
        "q114": "Connect a note to a feature",
        "q115": "Reducing scale",
        "q116": "Radius",
        "q117": "Compass",
        "q118": "Front view",
        "q119": "Orthographic",
        "q120": "Arrowheads",
        "q121": "Alternate positions of moving parts",
        "q122": "Organize and control visibility of elements",
        "q123": "True",
        "q124": "True",
        "q125": "False",
        "q126": "True",
        "q127": "False",
        "q128": "True",
        "q129": "True",
        "q130": "False",
        "q131": "True",
        "q132": "True",
        "q133": "False",
        "q134": "True",
        "q135": "True",
        "q136": "True",
        "q137": "True",
        "q138": "False",
        "q139": "False",
        "q140": "True",
        "q141": "False",
        "q142": "True",
        "q143": "True",
        "q144": "False",
        "q145": "True",
        "q146": "False",
        "q147": "True",
        "q148": "True",
        "q149": "False",
        "q150": "True",
        "q151": "True",
        "q152": "False"
    },
"CHM102":
     {
    "q1": "one s-electron",
    "q2": "decreases",
    "q3": "Fertilizers and biochemical substrates",
    "q4": "Ba",
    "q5": "the first member",
    "q6": "+1",
    "q7": "two s-electron and two p-electron",
    "q8": "Sc3+",
    "q9": "if the nucleus is stable, it will disintegrate",
    "q10": "+2 to +6",
    "q11": "0.0625g",
    "q12": "3.87BM",
    "q13": "14N-7",
    "q14": "small atomic radii",
    "q15": "the oxidation state of the transition metal doesn’t determine the colour",
    "q16": "Friedrich Wöhler",
    "q17": "crystalline form",
    "q18": "the properties of organic compounds",
    "q19": "studying the composition of stars",
    "q20": "Carbon, hydrogen, oxygen",
    "q21": "Alkanes",
    "q22": "Imbalance in electron density",
    "q23": "RCOOH",
    "q24": "RCHO",
    "q25": "Butylamine",
    "q26": "C=O and -O-",
    "q27": "CH3C(CH3)OHCH2CH3",
    "q28": "but-2-ene",
    "q29": "ethanol and ethanoic acid",
    "q30": "Fractional distillation"
  },
"CRS101": {
    "q1": "Jonah",
    "q2": "Moses",
    "q3": "Solomon",
    "q4": "Judas",
    "q5": "Peter",
    "q6": "Peter",
    "q7": "Abraham",
    "q8": "David",
    "q9": "Mary",
    "q10": "Thomas",
    "q11": "Light",
    "q12": "Adam",
    "q13": "Eve",
    "q14": "Bethlehem",
    "q15": "40",
    "q16": "John the Baptist",
    "q17": "Jordan",
    "q18": "Joseph",
    "q19": "Elijah",
    "q20": "Matthew",
    "q21": "Matthias",
    "q22": "Rahab",
    "q23": "Jesus wept.",
    "q24": "Jesus",
    "q25": "5 loaves and 2 fish"
},
"MTH204": {
    "q1": "cos(x)",
    "q2": "2x",
    "q3": "x²/2 + C",
    "q4": "ln|x| + C",
    "q5": "dy/dx",
    "q6": "-sin(x)",
    "q7": "e^x",
    "q8": "3x²",
    "q9": "e^x + C",
    "q10": "0",
    "q11": "n x^(n-1)",
    "q12": "Differentiation",
    "q13": "6x+2",
    "q14": "sin(x) + C",
    "q15": "tan(x) + C",
    "q16": "1/x",
    "q17": "4x³",
    "q18": "Integration",
    "q19": "5x + C",
    "q20": "7",
    "q21": "sec²(x)",
    "q22": "1/x",
    "q23": "-cos(x) + C",
    "q24": "Division rule",
    "q25": "2e^(2x)"
},
"LAW106": {
    "q1": "The Constitution",
    "q2": "Judiciary",
    "q3": "Textbooks",
    "q4": "Void",
    "q5": "Criminal Law",
    "q6": "Civil wrongs",
    "q7": "Chief Justice",
    "q8": "Fundamental Human Right",
    "q9": "Land Use Act",
    "q10": "The President",
    "q11": "Plaintiff",
    "q12": "Past decisions must be followed",
    "q13": "Culture and tradition",
    "q14": "Supreme Court",
    "q15": "Contract",
    "q16": "Statute",
    "q17": "Prosecution",
    "q18": "One cannot give what he does not have",
    "q19": "People's Court",
    "q20": "Defendant",
    "q21": "Commercial Law",
    "q22": "Res ipsa loquitur",
    "q23": "Mens rea",
    "q24": "Unlawful killing",
    "q25": "Personal Law"
},
"ECON108": {
    "q1": "Scarcity",
    "q2": "Wages",
    "q3": "The cost of the next best alternative forgone",
    "q4": "Mixed economy",
    "q5": "An arrangement where buyers and sellers interact",
    "q6": "Willingness and ability to pay",
    "q7": "Price and quantity demanded are inversely related",
    "q8": "Cost of production",
    "q9": "Change in demand due to price change",
    "q10": "Interest",
    "q11": "Price ceiling",
    "q12": "The total value of goods and services produced in a country within a year",
    "q13": "Increasing inflation",
    "q14": "National defense",
    "q15": "Command",
    "q16": "Education",
    "q17": "Total value of goods and services produced within a country",
    "q18": "Inflation",
    "q19": "Increase in demand without corresponding increase in supply",
    "q20": "Expenditure exceeds revenue",
    "q21": "Difference between a country's exports and imports",
    "q22": "Income tax",
    "q23": "Liquidity",
    "q24": "Consumer",
    "q25": "Adam Smith"
},
"MCB104": {
    "q1": "Louis Pasteur",
    "q2": "Saccharomyces cerevisiae",
    "q3": "Binary fission",
    "q4": "Anaerobes",
    "q5": "Staphylococcus aureus",
    "q6": "Both bacteria and fungi",
    "q7": "Alexander Fleming",
    "q8": "Gram stain",
    "q9": "Pathogens",
    "q10": "Flagella",
    "q11": "They reproduce inside living cells",
    "q12": "Sterilization",
    "q13": "Agar",
    "q14": "Mycobacterium tuberculosis",
    "q15": "Reverse transcriptase",
    "q16": "Pasteurization",
    "q17": "Plasmodium",
    "q18": "Condenser",
    "q19": "Mutualism",
    "q20": "Ringworm",
    "q21": "Measles",
    "q22": "Penicillium notatum",
    "q23": "Chitin",
    "q24": "Mesophiles",
    "q25": "Virology"
},
"PHY103": {
    "q1": "Newton",
    "q2": "3×10^8 m/s",
    "q3": "Gravitational force",
    "q4": "Motor",
    "q5": "Ammeter",
    "q6": "Pascal's Law",
    "q7": "The resultant force is zero",
    "q8": "Power",
    "q9": "Ohm's law",
    "q10": "Capacitor",
    "q11": "Displacement",
    "q12": "Coulomb",
    "q13": "Coal",
    "q14": "Kinetic energy",
    "q15": "Buoyant force",
    "q16": "Barometer",
    "q17": "Refraction",
    "q18": "Newton",
    "q19": "Dispersion",
    "q20": "Velocity",
    "q21": "Watt",
    "q22": "Electroscope",
    "q23": "Centripetal force",
    "q24": "Elasticity",
    "q25": "Hertz"
},
    "PHY004": {
    "q1": "Radioactivity",
    "q2": "Radioactive decay",
    "q3": "Intensity of the light",
    "q4": "Neutron",
    "q5": "Beta",
    "q6": "Nuclear fusion",
    "q7": "Radio-isotopes",
    "q8": "X-rays",
    "q9": "Gamma rays, X-rays, radio waves",
    "q10": "Half-life",
    "q11": "Henri Becquerel",
    "q12": "Electrons",
    "q13": "Helium nuclei",
    "q14": "1:4",
    "q15": "Nuclear energy released",
    "q16": "1/16",
    "q17": "X-rays",
    "q18": "Lead",
    "q19": "II and III only",
    "q20": "Radon",
    "q21": "Binding energy",
    "q22": "3.36×10⁹",
    "q23": "Decay constant",
    "q24": "6.7×10¹⁴",
    "q25": "Nuclear fission"
  },
    "PHY003": {
    "q1": "Demagnetization",
    "q2": "2.4×10⁻¹² N",
    "q3": "1.6×10⁻¹⁵ N",
    "q4": "X=4×10⁻⁶ T, Y=6×10⁻⁷ N",
    "q5": "1.92×10⁻¹⁰ N",
    "q6": "qV×B",
    "q7": "Moving perpendicular",
    "q8": "The angle of dip is the angle which a freely suspended magnet makes with the vertical",
    "q9": "Electromagnetic induction",
    "q10": "Lenz’s law",
    "q11": "Henry",
    "q12": "Eddy current",
    "q13": "Tesla",
    "q14": "All of the above",
    "q15": "Eddy currents",
    "q16": "It requires an external supply of current to the coil",
    "q17": "Increasing the gap between the poles of the magnet",
    "q18": "The current in the coil flows in the same direction",
    "q19": "Induction coil",
    "q20": "Fleming’s left hand rule",
    "q21": "Increase the current flowing",
    "q22": "A non-uniform scale",
    "q23": "6 J",
    "q24": "8 J",
    "q25": "Low resistance copper coil"
  }

}

def normalize(text):
    """Normalize text for comparison"""
    if not text:
        return ""
    return " ".join(str(text).strip().lower().split())

def lambda_handler(event, context):
    print("Received event:", json.dumps(event))
    
    # CORS headers
    cors_headers = {
        "Content-Type": "application/json",
        "Access-Control-Allow-Origin": "*",
        "Access-Control-Allow-Headers": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token",
        "Access-Control-Allow-Methods": "OPTIONS,GET,POST"
    }
    
    # Handle CORS preflight
    if event.get("httpMethod") == "OPTIONS":
        return {
            "statusCode": 200,
            "headers": cors_headers,
            "body": json.dumps({"message": "CORS preflight passed"})
        }
    
    try:
        # Extract courseId from query parameters or body
        course_id = None
        
        # Try query parameters first (GET request)
        if event.get("queryStringParameters"):
            course_id = event["queryStringParameters"].get("courseId")
        
        # Try body if no query parameters (POST request)
        if not course_id and event.get("body"):
            try:
                body = json.loads(event["body"])
                course_id = body.get("courseId")
            except json.JSONDecodeError:
                pass
        
        # Validate courseId
        if not course_id:
            return {
                "statusCode": 400,
                "headers": cors_headers,
                "body": json.dumps({
                    "success": False,
                    "error": "Missing courseId parameter"
                })
            }
        
        if course_id not in ANSWER_BANK:
            return {
                "statusCode": 400,
                "headers": cors_headers,
                "body": json.dumps({
                    "success": False,
                    "error": f"Course '{course_id}' not found in answer bank"
                })
            }
        
        # Get and normalize correct answers
        correct_answers = ANSWER_BANK[course_id]
        normalized_correct_answers = {k: normalize(v) for k, v in correct_answers.items()}
        
        return {
            "statusCode": 200,
            "headers": cors_headers,
            "body": json.dumps({
                "success": True,
                "courseId": course_id,
                "correct_answers": normalized_correct_answers,
                "total_questions": len(normalized_correct_answers)
            })
        }
        
    except Exception as e:
        print(f"Error: {str(e)}")
        return {
            "statusCode": 500,
            "headers": cors_headers,
            "body": json.dumps({
                "success": False,
                "error": f"Internal server error: {str(e)}"
            })
        }