AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Quiz Backend with API Gateway, Lambda, DynamoDB

Globals:
  Function:
    Timeout: 10
    Runtime: python3.11

Resources:

  QuizApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'OPTIONS,GET,POST'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  StartQuizFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: start_quiz/
      Handler: app.lambda_handler
      Events:
        GetQuestions:
          Type: Api
          Properties:
            Path: /start-quiz
            Method: get
            RestApiId: !Ref QuizApi

  SubmitAnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: submit_answer/
      Handler: app.lambda_handler
      Events:
        Submit:
          Type: Api
          Properties:
            Path: /submit-answer
            Method: post
            RestApiId: !Ref QuizApi

  GetAnswers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_answers/
      Handler: app.lambda_handler
      Events:
        GetAnswersAPI:
          Type: Api
          Properties:
            Path: /get-answer
            Method: GET
            RestApiId: !Ref QuizApi

  UserAttemptsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user_attempts/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: QuizAttempts
      Environment:
        Variables:
          QUIZ_ATTEMPTS_TABLE: QuizAttempts
      Events:
        UserAttemptsGet:
          Type: Api
          Properties:
            Path: /user/attempts
            Method: get
            RestApiId: !Ref QuizApi
        UserAttemptsPost:
          Type: Api
          Properties:
            Path: /user/attempts
            Method: post
            RestApiId: !Ref QuizApi

  CheckAttemptsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: check_attempts/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: QuizAttempts
      Environment:
        Variables:
          QUIZ_ATTEMPTS_TABLE: QuizAttempts
      Events:
        CheckAttemptsAPI:
          Type: Api
          Properties:
            Path: /check-attempts
            Method: get
            RestApiId: !Ref QuizApi

  SubmitQuizFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: submit_quiz/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: QuizAttempts
      Environment:
        Variables:
          QUIZ_ATTEMPTS_TABLE: QuizAttempts
      Events:
        SubmitQuizAPI:
          Type: Api
          Properties:
            Path: /submit-quiz
            Method: post
            RestApiId: !Ref QuizApi

  LeaderboardFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: leaderboard/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: QuizAttempts
      Environment:
        Variables:
          QUIZ_ATTEMPTS_TABLE: QuizAttempts
      Events:
        LeaderboardAPI:
          Type: Api
          Properties:
            Path: /leaderboard
            Method: get
            RestApiId: !Ref QuizApi

Outputs:
  QuizApiUrl:
    Description: "API Gateway endpoint URL for Quiz API"
    Value: !Sub "https://${QuizApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${AWS::StackName}-QuizApiUrl"

  QuizAttemptsTableName:
    Description: "DynamoDB table name for quiz attempts (existing table)"
    Value: QuizAttempts
    Export:
      Name: !Sub "${AWS::StackName}-QuizAttemptsTableName"
